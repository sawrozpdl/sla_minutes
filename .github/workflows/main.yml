name: Deploy

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and test on Node ${{ matrix.node }} and ${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: ['16.x']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install deps and build (with cache)
        uses: bahmutov/npm-install@v1

      - name: Test
        run: yarn test --ci --coverage --maxWorkers=2

      - name: Build
        run: yarn build
  
  publish:
    name: Publish to NPM registry on main branch changes

    runs-on: ubuntu-latest

    needs: build

    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Set NPM_TOKEN
        run: npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}

      - name: Set package version to ENV
        run: | 
          PV=$(cat package.json \
          | grep version \
          | head -1 \
          | awk -F: '{ print $2 }' \
          | sed 's/[",]//g')
          NLV=$(npm view sla_work_time version)
          echo "PACKAGE_VERSION=$PV" >> $GITHUB_ENV
          echo "NPM_LATEST_VERSION=$NLV" >> $GITHUB_ENV
      - name: Install
        run: |
          if [  ${{ env.PACKAGE_VERSION }} !=  ${{ env.NPM_LATEST_VERSION }} ]; then
            yarn install 
          else
            echo "No new deployments, skipping install"
          fi

      - name: Publish
        run: |
          if [  ${{ env.PACKAGE_VERSION }} !=  ${{ env.NPM_LATEST_VERSION }} ]; then
            npm publish 
          else
            echo "No new deployments, skipping deploy"
          fi

  deploy_demo_ui:
    defaults:
      run:
        working-directory: demo

    runs-on: ubuntu-latest

    needs: publish

    strategy:
      matrix:
        node: ['16.x']

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build the package
        run: |
          yarn 
          yarn build 
      - name: deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./demo/dist  